@using PagedList
@using PagedList.Mvc

@model IPagedList<MenuDetail>

@{
    ViewBag.Title = "DashBoard";
    MenuDetail menuItem = new MenuDetail();
}

@section Scripts
{
    @Styles.Render("~/Content/sliderCheckBox.css")
    @Scripts.Render("~/bundles/jqueryval")
    <link href="~/Content/menu.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/lib/font-awesome/css/all.min.css" />
    <link rel="stylesheet" href="~/Content/ModalPopup.css" />
    <link href="~/Content/PagedList.css" rel="stylesheet" />
    @if (ViewBag.deleteMessage != null)
    {
        <script type="text/javascript">
            $(document).ready(function () {
                toastr.error('Item Deleted Succesfully', 'Delete Message', { timeOut: 5000 })
                
            });
        </script>
    }
    @if (ViewBag.addMessage != null)
    {
        if (ViewBag.addMessage == "Added")
        {
            <script type="text/javascript">
                $(document).ready(function () {
                    toastr.success('Item Added Succesfully', 'Success Message', { timeOut: 5000 })
                });
            </script>
        }
        else if (ViewBag.addMessage == "Error")
        {
            <script type="text/javascript">
                $(document).ready(function () {
                    toastr.warning('Error while Add', 'Warning Message', { timeOut: 5000 })
                });
            </script>
        }
    }
    @if (ViewBag.editMessage != null)
    {
        if (ViewBag.editMessage == "Edited")
        {
            <script type="text/javascript">
                $(document).ready(function () {
                    toastr.info('Item updated Succesfully', 'Update Message', { timeOut: 5000 })
                });
            </script>
        }
        else if (ViewBag.editMessage == "Error")
        {
            <script type="text/javascript">
                $(document).ready(function () {
                    toastr.warning('Error while Update', 'Warning Message', { timeOut: 5000 })
                });
            </script>
        }
    }
    <script type="text/javascript">
        $('#AddModalCenter').on('hidden.bs.modal', function () {
            var theForm = $(this).find('form');

            theForm.each(function () {
                theForm.find(".field-validation-error").empty();
                theForm.trigger('reset.unobtrusiveValidation');
            });
        })

    </script>
}


<div style="height: 100% ">

    <div class="section-header">
        <div style="display: flex; justify-content: right;">
            <h2 style="margin: auto; margin-top: 20px; font-size: 35px; color: #88ebd3ac; border-radius: 5px; text-align: center; font-weight: 650 ">Our Menu</h2>
        </div>

        <br />
        <div style="display: flex; justify-content: flex-end;height:fit-content">
            <div style="display:contents">

                <button type="button" class="btn" data-toggle="modal" data-target="#AddModalCenter" style="color: #fff;font-size: initial; margin-right: auto; height: fit-content; align-content: center; background-color: #563D7C ">
                    Add <i class="fa fa-add" style="padding:0px" aria-hidden="true"></i>
                </button>
            </div>

            <div class="modal fade" id="AddModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true" style=" background: rgb(255, 255, 255,0.3)" >
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title popup-header-title" style="margin:auto" id="exampleModalLongTitle">Add MenuItem</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span class="popup-header-title" aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            @{
                                ViewBag.ActionMethod = "Add";
                                Html.RenderPartial("AddEditMenuItem", new MenuDetail());
                            }
                        </div>
                    </div>
                </div>
            </div>


            @using (Html.BeginForm("SearchFunction", "UserLogin", FormMethod.Get))
            {
                <div style="display: inline-flex;flex-direction: column; justify-content: space-evenly; align-items: flex-end;">
                    <div>
                        @Html.DropDownList("MealType", (IEnumerable<SelectListItem>)ViewBag.mealTypes, "---ALL---", new { @class = "dropdown", style = "height:26px;padding:2px;margin-top:8px" })
                        @Html.TextBox("searchString", "", new { @class = "", placeholder = "Search here...", style = "margin-top:8px;margin-bottom:8px" })
                    </div>
                    <div>
                        <button type="submit" value="register" class="btn" style="color: #fff;background-color: #563D7C; height: 22px; height: fit-content; align-content: center ">
                            Search <i class="fa fa-search fa-1x" style="padding:0px" aria-hidden="true"></i>
                        </button>
                    </div>
                </div>
                <br />

            }

        </div>

        <br />

        <div id="loadpartial">
            @{
                Html.RenderPartial("DisplayMenuItem", Model);
            }
            <div id="Paging" class="col-sm-12">
                @if (ViewBag.Action == "SearchFunction")
                {
                    @Html.PagedListPager(Model, page => Url.Action("SearchFunction", new { page, MealType = Request.QueryString["MealType"], searchString = Request.QueryString["searchString"] }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true, DisplayItemSliceAndTotal = true })
                }
                else
                {
                    @Html.PagedListPager(Model, page => Url.Action("DashBoard", new { page }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true, DisplayItemSliceAndTotal = true })
                }
            </div>
        </div>



    </div>
</div>






